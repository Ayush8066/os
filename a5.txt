#include<iostream>
using namespace std;

int main() {
    int n, m;
    cout << "Enter the number of processes: ";
    cin >> n;
    cout << "Enter the number of resources: ";
    cin >> m;

    int alloc[n][m], max[n][m], avail[m];

    cout << "Enter the allocation matrix:" << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> alloc[i][j];
        }
    }

    cout << "Enter the maximum matrix:" << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> max[i][j];
        }
    }

    cout << "Enter the available resources:" << endl;
    for (int j = 0; j < m; j++) {
        cin >> avail[j];
    }

    int f[n], ans[n], ind = 0;
    for (int k = 0; k < n; k++) {
        f[k] = 0;
    }

    int need[n][m];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            need[i][j] = max[i][j] - alloc[i][j];
        }
    }

    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            if (f[i] == 0 && (need[i][0] <= avail[0]) && (need[i][1] <= avail[1]) && (need[i][2] <= avail[2])) {
                ans[ind++] = i;
                for (int y = 0; y < m; y++) {
                    avail[y] += alloc[i][y];
                }
                f[i] = 1;
            }
        }
    }

    int flag = 1;
    for (int i = 0; i < n; i++) {
        if (f[i] == 0) {
            flag = 0;
            cout << "The given sequence is not safe";
            break;
        }
    }

    if (flag == 1) {
        cout << "Following is the SAFE Sequence" << endl;
        for (int i = 0; i < n - 1; i++) {
            cout << " P" << ans[i] << " ->";
        }
        cout << " P" << ans[n - 1] << endl;
    }

    return (0);
}

// Enter the number of processes: 5
// Enter the number of resources: 3
// Enter the allocation matrix:
// Process P0: 0 1 0
// Process P1: 2 0 0
// Process P2: 3 0 2
// Process P3: 2 1 1
// Process P4: 0 0 2
// Enter the maximum matrix:
// Process P0: 7 5 3
// Process P1: 3 2 2
// Process P2: 9 0 2
// Process P3: 2 2 2
// Process P4: 4 3 3
// Enter the available resources:
// 3 3 2
// Following is the SAFE Sequence:
// P1 -> P3 -> P4 -> P0 -> P2
